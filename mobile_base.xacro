<?xml version="1.0"?>
<robot xmlns:xacro="https://www.ros.org/wiki/xacro">


    <xacro:property name="base_length" value="0.6" />
    <xacro:property name="base_width" value="0.4" />
    <xacro:property name="base_height" value="0.2" />
    <xacro:property name="wheel_radius" value="0.1" />
    <xacro:property name="wheel_length" value="0.05"/>
    

    <link name="base_footprint" />
  
    <link name ="base_link">
        <visual>
            <geometry>
                <box size ="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <origin xyz ="0 0 ${base_height / 2.0 }" rpy =" 0 0 0" />
            <material name="red" />
        </visual> 
        <collision>
            <geometry>
                <box size ="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <origin xyz ="0 0 ${base_height / 2.0 }" rpy =" 0 0 0" />
        </collision>
        <!--Passing the params here,multiple by 2 bcoz the interia ha to be strng,so the robot can't move unwantedly-->
        <xacro:box_interia m="5.0" l="${2*base_length}" w="${2*base_width}" h="${2*base_height}"
                     xyz="0 0 ${base_height / 2.0}" rpy="0 0 0 "/> 
    </link>
    <!--By using the macro,we can reduce the code,Both code has to be Same-->
    <xacro:macro name="wheel_link" params="prefix">
        <link name="${prefix}_wheel_link">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz ="0 0 0" rpy =" ${pi / 2.0} 0 0" />
                <material name="blue" />
            </visual>
            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />
                </geometry>
                <origin xyz ="0 0 0" rpy =" ${pi / 2.0} 0 0" />
            </collision>
            <xacro:cylinder_interia m="1.0" r="${2*wheel_radius}" h="${2*wheel_length}" 
             xyz="0 0 0" rpy="${pi / 2.0} 0 0" />
        </link >
    </xacro:macro>

 
    <xacro:wheel_link prefix="right" />
    <xacro:wheel_link prefix="left" />
    

    <!--By the single code,we can write code for two wheels-->


    <link name ="caster_wheel">
        <visual>
            <geometry>
                <sphere radius ="${wheel_radius / 2.0 }" />
            </geometry>
            <origin xyz ="0 0 0" rpy =" 0 0 0" />
            <material name="blue" />
        </visual> 
        <collision>
            <geometry>
                <sphere radius ="${wheel_radius / 2.0 }" />
            </geometry>
            <origin xyz ="0 0 0" rpy =" 0 0 0" />
        </collision>
        <xacro:sphere_interia m="0.5" r="${2*wheel_radius / 2.0}" 
                              xyz="0 0 0" rpy="0 0 0" />
    </link>

    <joint name="base_footprint_joint" type="fixed" >
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
    </joint>
   
    <joint name="base_right_wheel_joint" type="continuous" >
        <parent link="base_link" />
        <child link="right_wheel_link" />
        <!--0.6 is the len / 4 is -0.15-->
        <origin xyz="${-base_length / 4.0} ${-(base_width + wheel_length) / 2.0} 0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint>

    <joint name="base_left_wheel_joint" type="continuous" >
        <parent link="base_link" />
        <child link="left_wheel_link" />
        <origin xyz="${-base_length / 4.0} ${(base_width + wheel_length) / 2.0}  0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
    </joint> 



    <joint name="base_caster_wheel_joint" type="fixed" >
        <parent link="base_link" />
        <child link="caster_wheel" />
        <origin xyz="${base_length / 3.0} 0 ${-wheel_radius / 2.0}" rpy="0 0 0" />
    </joint>

</robot>
